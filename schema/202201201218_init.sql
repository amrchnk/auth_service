-- +goose Up
-- SQL in this section is executed when the migration is applied.
CREATE TABLE IF NOT EXISTS public.users
(
    id               bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login          varchar(255) not null unique,
    username          varchar(255) not null,
    password_hash varchar(255) not null,
    created_at    timestamp without time zone NOT NULL DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id              bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role            varchar(255) not null
);

CREATE TABLE IF NOT EXISTS public.users_have_roles
(
    user_id int REFERENCES public.users (id)  ON DELETE CASCADE,
    role_id int REFERENCES public.roles (id)  ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.rules
(
    id              bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rule            varchar(255) not null
);

CREATE TABLE IF NOT EXISTS public.roles_have_rules
(
    role_id int REFERENCES public.roles (id) ON DELETE CASCADE,
    rule_id int REFERENCES public.rules (id) ON DELETE CASCADE
);

INSERT INTO roles (id,role) VALUES (1,'Администратор'),(2,'Зарегистрированный пользователь');
INSERT INTO rules (id,rule) VALUES (1,'Add user'),(2,'Delete user'),(3,'Get user'),(4,'Get all users');
INSERT INTO roles_have_rules (role_id,rule_id) VALUES (1,1),(1,2),(1,3),(1,4);

-- +goose Down
-- SQL in this section is executed when the migration is rolled back.

DROP TABLE IF EXISTS roles_have_rules CASCADE;
DROP TABLE IF EXISTS rules CASCADE;
DROP TABLE IF EXISTS users_have_roles CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS users CASCADE;